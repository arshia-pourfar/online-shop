// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String       @id @default(cuid())
  email     String       @unique
  name      String?
  password  String
  phone     String?
  status    UserStatus   @default(ACTIVE)
  role      Role         @default(USER)
  orders    Order[]
  reports   Report[]
  addresses Address[]    // ارتباط با آدرس‌ها
  createdAt DateTime     @default(now())
}

model Address {
  id         Int      @id @default(autoincrement())
  user       User     @relation(fields: [userId], references: [id])
  userId     String
  title      String
  street     String
  city       String
  postalCode String
  country    String
  orders     Order[]  
}

model Category {
  id       Int       @id @default(autoincrement())
  name     String    @unique
  slug     String    @unique
  imageSrc String?
  products Product[]
}

model Product {
  id          Int           @id @default(autoincrement())
  name        String
  price       Float
  stock       Int           @default(10)
  status      ProductStatus @default(AVAILABLE)
  imageUrl    String
  description String?
  category    Category      @relation(fields: [categoryId], references: [id])
  categoryId  Int
  orderItems  OrderItem[]
}

model Order {
  id              String      @id @default(cuid())
  user            User        @relation(fields: [userId], references: [id])
  userId          String
  address         Address?    @relation(fields: [addressId], references: [id])
  addressId       Int?
  customerName    String
  status          OrderStatus @default(PENDING)
  total           Float
  items           OrderItem[]
  createdAt       DateTime    @default(now())
  deliveryTime    DateTime? 
}

model OrderItem {
  id        Int     @id @default(autoincrement())
  order     Order   @relation(fields: [orderId], references: [id])
  orderId   String
  product   Product @relation(fields: [productId], references: [id])
  productId Int
  quantity  Int
}

model SalesStats {
  id        String   @id @default(cuid())
  year      Int
  month     String
  sales     Int
  revenue   Int
  createdAt DateTime @default(now())
}

model Report {
  id          String      @id @default(cuid())
  title       String
  type        String
  reportDate  DateTime
  author      User        @relation(fields: [authorId], references: [id])
  authorId    String
  status      ReportStatus @default(GENERATED)
  fileUrl     String?
  createdAt   DateTime    @default(now())
}

// --- Enums ---

enum Role {
  USER
  ADMIN
}

enum OrderStatus {
  PENDING
  PROCESSING
  SHIPPED
  DELIVERED
  CANCELLED
}

enum ProductStatus {
  AVAILABLE
  OUT_OF_STOCK
  DISCONTINUED
  COMING_SOON
  HIDDEN
}

enum UserStatus {
  ACTIVE
  INACTIVE
  PENDING
  SUSPENDED
}

enum ReportStatus {
  GENERATED
  FAILED
  IN_PROGRESS
  BLOCKED
  HIDDEN
  ANSWERED
}